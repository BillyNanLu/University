微指令
microinstruction
在机器的一个CPU周期中，一组实现一定操作功能的微命令的组合，描述微操作的语句。微命令是指控制部件通过控制线向执行部件发出各种控制命令。操作微指令是描述受控电路的操作语句 , 分支微指令是描述控制电路的分支语句。

机器指令
MachineInstructions
是CPU能直接识别并执行的指令，它的表现形式是二进制编码。机器指令通常由操作码和操作数两部分组成，操作码指出该指令所要完成的操作，即指令的功能，操作数指出参与运算的对象，以及运算结果所存放的位置等。

宏指令
macro
是若干条机器指令组成的软件指令，属于软件，代表某功能的一段源程序。在编写C/C++程序时，经常用#define指令，定义的一般形式是#define宏替换名字符串（或数值）。一旦在程序中使用，编译时会自动用所定义的字符串（或数值）代替它。

存储器-存储器（SS）型
Memory - Memory (SS) type instructions
参与操作的数据都放在内存里，机器执行这种指令需要多次访问内存。

寄存器-寄存器（RR）型
Register Register (RR) type
需要对各通用寄存器或专用寄存器，从寄存器中取操作数，把操作结果放到另一寄存器中。

寄存器-存储器（RS）型
Register Memory (RS) type
既要访问内存单元，又要访问寄存器


定长指令
Fixed length instruction
指令系统中所有指令的长度都相等

变长指令
variable-length instruction
指令系统中各种指令的长度不等


四地址
Four-address
要使确定的机器指令序列控制计算机自动连续地进行预定的信息处理，一条机器指令除包含2个操作数的地址(大多数算术运算操作要求2个操作数)外，还要一个存运算操作结果的地址及一个取下条指令的地址。其中前3个是存取操作数的地址，后一个是取指令的地址。

三地址
Three-address
需要至少三个操作数执行操作的指令类型，由于每个陈述都包含了三个变量,即每条指令最多有三个操作数

二地址
Two-address
需要至少两个操作数执行操作的指令类型，二地址指令是机器指令的一种格式。它有一个操作码和两个地址字段。一个地址字段是通用的,可用于目标或源,其他地址字段用于源。

单地址
Single-address
只有一个操作数地址的指令。

零地址
Zero-address
是机器指令的一种，是指令系统中的一种不设地址字段的指令，只有操作码，没有操作数。


算术与逻辑运算指令
Arithmetic and logical operation instructions
这是每台计算机都必须具有的指令，它通常用于在计算机的运算器部件中完成对一或两个数据的算术运算或逻辑运算功能。

移位操作类指令
Shift operation instructions
包括算术移位、逻辑移位、循环移位三种，用于把指定的一个操作数左移或右移一（多）位。

数据传送类指令
Data transfer instructions
用于实现通用寄存器之间、通用寄存器与内存储器存储单元之间、内存储器不同存储单元之间、寄通用存器与外围设备（接口）之间（有些场合也可以单独划分为输入/输出指令）的数据传送功能。

转移类指令、子程序调用与返回指令
Transfer class instructions, subroutine calls, and return instructions
用于解决变动程序中指令执行次序的需求。

特权指令
Privileged Instruction
指仅用于操作系统或其它系统软件的指令，为确保系统与数据安全起见，这一类指令不提供给用户使用。

其他指令
Other Instructions
如动态停机指令、空操作指令、置条件码指令、开中断指令、关中断指令、堆栈操作指令等，用于完成某些特定的处理功能。


ALTER AUTHORIZATION ON database::InstructionSystem TO sa